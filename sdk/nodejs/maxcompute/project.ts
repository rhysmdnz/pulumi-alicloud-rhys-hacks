// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a Max Compute Project resource.
 *
 * For information about Max Compute Project and how to use it, see [What is Project](https://help.aliyun.com/document_detail/473237.html).
 *
 * > **NOTE:** Available in v1.77.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultProject = new alicloud.maxcompute.Project("default", {
 *     comment: "test_for_terraform",
 *     defaultQuota: "默认后付费Quota",
 *     productType: "PAYASYOUGO",
 *     projectName: "test_create_spec_one",
 * });
 * ```
 */
export class Project extends pulumi.CustomResource {
    /**
     * Get an existing Project resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectState, opts?: pulumi.CustomResourceOptions): Project {
        return new Project(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:maxcompute/project:Project';

    /**
     * Returns true if the given object is an instance of Project.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Project {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Project.__pulumiType;
    }

    /**
     * Comments of project
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Default Computing Resource Group
     */
    public readonly defaultQuota!: pulumi.Output<string | undefined>;
    /**
     * IP whitelistSee the following `Block IpWhiteList`.
     */
    public readonly ipWhiteList!: pulumi.Output<outputs.maxcompute.ProjectIpWhiteList | undefined>;
    /**
     * Project owner
     */
    public /*out*/ readonly owner!: pulumi.Output<string>;
    /**
     * Quota payment type, support `PayAsYouGo`, `Subscription`, `Dev`.
     */
    public readonly productType!: pulumi.Output<string | undefined>;
    /**
     * The name of the project
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * Project base attributesSee the following `Block Properties`.
     */
    public readonly properties!: pulumi.Output<outputs.maxcompute.ProjectProperties>;
    /**
     * Security-related attributesSee the following `Block SecurityProperties`.
     */
    public readonly securityProperties!: pulumi.Output<outputs.maxcompute.ProjectSecurityProperties>;
    /**
     * The status of the resource
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Life cycle type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Project resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectArgs | ProjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProjectState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["defaultQuota"] = state ? state.defaultQuota : undefined;
            resourceInputs["ipWhiteList"] = state ? state.ipWhiteList : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["productType"] = state ? state.productType : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
            resourceInputs["securityProperties"] = state ? state.securityProperties : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ProjectArgs | undefined;
            if ((!args || args.projectName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectName'");
            }
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["defaultQuota"] = args ? args.defaultQuota : undefined;
            resourceInputs["ipWhiteList"] = args ? args.ipWhiteList : undefined;
            resourceInputs["productType"] = args ? args.productType : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["securityProperties"] = args ? args.securityProperties : undefined;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Project.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Project resources.
 */
export interface ProjectState {
    /**
     * Comments of project
     */
    comment?: pulumi.Input<string>;
    /**
     * Default Computing Resource Group
     */
    defaultQuota?: pulumi.Input<string>;
    /**
     * IP whitelistSee the following `Block IpWhiteList`.
     */
    ipWhiteList?: pulumi.Input<inputs.maxcompute.ProjectIpWhiteList>;
    /**
     * Project owner
     */
    owner?: pulumi.Input<string>;
    /**
     * Quota payment type, support `PayAsYouGo`, `Subscription`, `Dev`.
     */
    productType?: pulumi.Input<string>;
    /**
     * The name of the project
     */
    projectName?: pulumi.Input<string>;
    /**
     * Project base attributesSee the following `Block Properties`.
     */
    properties?: pulumi.Input<inputs.maxcompute.ProjectProperties>;
    /**
     * Security-related attributesSee the following `Block SecurityProperties`.
     */
    securityProperties?: pulumi.Input<inputs.maxcompute.ProjectSecurityProperties>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * Life cycle type.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Project resource.
 */
export interface ProjectArgs {
    /**
     * Comments of project
     */
    comment?: pulumi.Input<string>;
    /**
     * Default Computing Resource Group
     */
    defaultQuota?: pulumi.Input<string>;
    /**
     * IP whitelistSee the following `Block IpWhiteList`.
     */
    ipWhiteList?: pulumi.Input<inputs.maxcompute.ProjectIpWhiteList>;
    /**
     * Quota payment type, support `PayAsYouGo`, `Subscription`, `Dev`.
     */
    productType?: pulumi.Input<string>;
    /**
     * The name of the project
     */
    projectName: pulumi.Input<string>;
    /**
     * Project base attributesSee the following `Block Properties`.
     */
    properties?: pulumi.Input<inputs.maxcompute.ProjectProperties>;
    /**
     * Security-related attributesSee the following `Block SecurityProperties`.
     */
    securityProperties?: pulumi.Input<inputs.maxcompute.ProjectSecurityProperties>;
}
